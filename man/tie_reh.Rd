% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data.R
\docType{data}
\name{tie_reh}
\alias{tie_reh}
\title{Tie-Oriented Relational Event History}
\format{
\code{tie_reh} is an \code{reh} object containing the following additional attributes:
\itemize{
   \item{}{\code{attr(tie_reh,"true.pars")}, that is a vector containing the values of the parameters used in the generation of the event sequence}
   \item{}{\code{attr(tie_reh,"remulate.seed")}, that contains the seed value used in \code{remulate::remulateTie()} for generating the event sequence}
   \item{}{\code{attr(tie_reh,"remulate.reh")}, is a \code{data.frame} with the raw simulated edgelist. The columns of the \code{data.frame} are:
           \itemize{
               \item{}{\code{time}: the timestamp indicating the time at which each event occurred}
               \item{}{\code{actor1}: the actor that generated the relational event}
               \item{}{\code{actor2}: the actor that received the relational event}
           }
    }
}
}
\usage{
data(tie_reh)
}
\description{
The processed \code{reh} object of a randomly generated sequence of relational events with 20 actors and 1000 events. The event sequence is generated by following a tie-oriented modeling approach (for more information run on console \code{help(topic = remulateTie, package = "remulate")} or \code{?remulate::remulateTie}).
}
\examples{

# load the data into the workspace
data(tie_reh)

# define linear predictor and claculate stastistcs with \code{remstats} package

## linear predictor
tie_model <- ~ 1 + remstats::indegreeSender() + remstats::inertia() + remstats::reciprocity() 

## calculate statistics
tie_reh_stats <- remstats::remstats(edgelist = tie_reh, tie_effects = tie_model)

## estimate model using method = "MLE"
mle_tie <- remstimate::remstimate(reh = tie_reh, stats = tie_reh_stats, method = "MLE")

## print out a summary of the estimation
summary(mle_tie)

}
\keyword{datasets}
